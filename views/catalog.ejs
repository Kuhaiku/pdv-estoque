<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Catálogo de Vendas da Érica</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Estilos específicos para o catálogo */
        .catalog-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 15px;
            padding: 10px;
            max-width: 1200px;
            margin: 20px auto;
        }

        .catalog-item-card {
            background-color: var(--color-white);
            border-radius: var(--border-radius-medium);
            box-shadow: var(--color-shadow-light);
            display: flex;
            flex-direction: column;
            overflow: hidden;
            text-align: center;
            transition: transform 0.2s ease-in-out;
        }

        .catalog-item-card:hover {
            transform: translateY(-5px);
        }

        .catalog-item-card img {
            width: 100%;
            height: 150px; /* Altura fixa para as imagens */
            object-fit: contain; /* Garante que a imagem inteira seja visível */
            border-bottom: 1px solid var(--color-border-light);
            background-color: #f8f8f8; /* Fundo claro para imagens transparentes */
            cursor: pointer; /* Indica que a imagem é clicável */
        }

        .catalog-item-info {
            padding: 10px;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            justify-content: space-between;
        }

        .catalog-item-name {
            font-weight: bold;
            color: var(--color-primary-blue-dark);
            margin-bottom: 5px;
            font-size: 1em;
            word-break: break-word;
        }

        .catalog-item-quantity {
            font-size: 0.9em;
            color: var(--color-text-light);
            margin-bottom: 10px;
        }

        .catalog-item-price {
            font-size: 1.3em;
            font-weight: bold;
            color: var(--color-accent-green-dark);
            margin-top: auto;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .no-items-message {
            text-align: center;
            color: var(--color-text-light);
            font-size: 1.2em;
            margin-top: 50px;
        }

        /* Responsive adjustments for catalog */
        @media (max-width: 768px) {
            .catalog-container {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 10px;
            }
            .catalog-item-card {
                margin: 0;
            }
            .catalog-item-name {
                font-size: 0.95em;
            }
            .catalog-item-quantity {
                font-size: 0.85em;
            }
            .catalog-item-price {
                font-size: 1.1em;
            }
        }

        @media (max-width: 480px) {
            .catalog-container {
                grid-template-columns: 1fr;
                padding: 5px;
            }
            .catalog-item-card img {
                height: 120px;
            }
            .catalog-item-card {
                flex-direction: row;
                align-items: center;
            }
            .catalog-item-card img {
                width: 100px;
                flex-shrink: 0;
                border-bottom: none;
                border-right: 1px solid var(--color-border-light);
            }
            .catalog-item-info {
                text-align: left;
                padding-left: 10px;
                padding-right: 10px;
            }
            .catalog-item-price {
                padding-top: 0;
                border-top: none;
                margin-left: auto;
                font-size: 1.2em;
            }
            .catalog-item-name {
                margin-bottom: 2px;
            }
        }

        /* --- Estilos para o Lightbox/Overlay de Imagem --- */
        .image-overlay {
            position: fixed; /* Fixa na tela */
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9); /* Fundo escuro semi-transparente */
            display: flex; /* Para centralizar a imagem */
            justify-content: center;
            align-items: center;
            z-index: 9999; /* Garante que fique acima de tudo */
            opacity: 0; /* Começa invisível */
            visibility: hidden; /* Esconde do fluxo do documento */
            transition: opacity 0.3s ease-in-out; /* Transição suave */
        }

        .image-overlay.active {
            opacity: 1; /* Torna visível */
            visibility: visible;
        }

        .image-overlay img {
            max-width: 90%; /* Limita o tamanho da imagem */
            max-height: 90%; /* Limita o tamanho da imagem */
            object-fit: contain; /* Garante que a imagem inteira seja visível */
            display: block; /* Remove espaço extra abaixo da imagem */
            background-color: #fff; /* Fundo branco para a imagem, se for transparente */
            padding: 5px; /* Pequeno padding ao redor da imagem */
            border-radius: var(--border-radius-small);
        }

        .image-overlay .close-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            color: white;
            font-size: 2.5em; /* Tamanho do ícone X */
            cursor: pointer;
            z-index: 10000; /* Acima da imagem */
            background: none;
            border: none;
            padding: 0;
            line-height: 1;
            text-shadow: 0 0 5px rgba(0,0,0,0.5); /* Sombra para o X */
        }

        .image-overlay .close-btn:hover {
            color: var(--color-accent-red); /* Cor ao passar o mouse */
        }

        /* Oculta o scroll do body quando o overlay estiver ativo */
        body.no-scroll {
            overflow: hidden;
        }
    </style>
</head>
<body id="catalogBody">
    <h1>Catálogo de Vendas da Érica</h1>

    <div class="catalog-container">
        <% if (itens.length > 0) { %>
            <% itens.forEach(item => { %>
                <% if (item.quantidade > 0) { %>
                    <div class="catalog-item-card">
                        <% if (item.imagem) { %>
                            <img class="catalog-item-img" src="/uploads/<%= item.imagem %>" alt="<%= escapeHTML(item.nome) %>">
                        <% } else { %>
                            <img class="catalog-item-img" src="/img/placeholder.png" alt="Sem imagem">
                        <% } %>
                        <div class="catalog-item-info">
                            <div class="text-info">
                                <div class="catalog-item-name"><%= escapeHTML(item.nome) %></div>
                                <div class="catalog-item-quantity">Qtd: <%= item.quantidade %></div>
                            </div>
                            <div class="catalog-item-price">R$ <%= item.valor_venda.toFixed(2).replace('.', ',') %></div>
                        </div>
                    </div>
                <% } %>
            <% }); %>
        <% } else { %>
            <p class="no-items-message">Nenhum item disponível no catálogo no momento.</p>
        <% } %>
    </div>

    <div class="image-overlay" id="imageOverlay">
        <button class="close-btn" id="closeOverlayBtn"><i class="fas fa-times-circle"></i></button>
        <img src="" alt="Imagem do produto" id="overlayImage">
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const itemImages = document.querySelectorAll('.catalog-item-img');
            const imageOverlay = document.getElementById('imageOverlay');
            const overlayImage = document.getElementById('overlayImage');
            const closeOverlayBtn = document.getElementById('closeOverlayBtn');
            const catalogBody = document.getElementById('catalogBody');

            // Função para abrir o overlay
            function openOverlay(imageSrc) {
                overlayImage.src = imageSrc;
                imageOverlay.classList.add('active');
                catalogBody.classList.add('no-scroll'); // Previne rolagem do body
            }

            // Função para fechar o overlay
            function closeOverlay() {
                imageOverlay.classList.remove('active');
                catalogBody.classList.remove('no-scroll'); // Permite rolagem do body
                overlayImage.src = ''; // Limpa a imagem
            }

            // Adiciona o event listener para cada imagem do catálogo
            itemImages.forEach(img => {
                img.addEventListener('click', (event) => {
                    openOverlay(event.target.src);
                });
            });

            // Adiciona event listener para o botão de fechar
            closeOverlayBtn.addEventListener('click', closeOverlay);

            // Fecha o overlay ao clicar fora da imagem (no próprio overlay)
            imageOverlay.addEventListener('click', (event) => {
                // Se o clique não foi na imagem ou no botão de fechar
                if (event.target === imageOverlay) {
                    closeOverlay();
                }
            });

            // Fecha o overlay ao pressionar ESC
            document.addEventListener('keydown', (event) => {
                if (event.key === 'Escape' && imageOverlay.classList.contains('active')) {
                    closeOverlay();
                }
            });
        });
    </script>
</body>
</html>
